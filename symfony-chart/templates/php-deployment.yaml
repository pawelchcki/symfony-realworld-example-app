apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -v convert -c
    kompose.image-pull-policy: Always
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    io.kompose.service: php
  name: php
spec:
  replicas: 3
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: php
    spec:
      containers:
      - image: datadog/docker-library:dd_trace_node_symfony_real_world_app
        imagePullPolicy: Always
        name: node
        env:
        - name: DD_AGENT_HOST
          value: ddagent
        resources:
          limits:
            memory: "400M"
            cpu: "500m"
        volumeMounts:
        - mountPath: /project/spec/api-spec-test-runner.sh
          subPath: api-spec-test-runner.sh
          name: node-config-volume
      - image: nginx:1.15.10
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - name: project-dir
          mountPath: "/project"
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/
      - name: memcache
        image: memcached:alpine
        resources: {}
        ports:
        - containerPort: 11211
      - name: mysql
        env:
        - name: MYSQL_DATABASE
          value: project
        - name: MYSQL_PASSWORD
          value: project
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_USER
          value: project
        image: datadog/docker-library:dd_trace_mysql_symfony_real_world_app
        ports:
        - containerPort: 3306
        resources: {}
      - name: php
        image: {{ .Values.php_docker_image }}
        env:
        - name: DDTRACE_DEB_URL
          value: {{ .Values.deb_url }}
        - name: DD_TRACE_GLOBAL_TAGS
          value: kube_namespace:{{ .Release.Namespace }}{{ if .Values.global_tags }},{{ .Values.global_tags }}{{ end }}
        - name: DD_AGENT_HOST
          value: ddagent
        - name: DATABASE_URL
          value: mysql://project:project@127.0.0.1:3306/project
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
        resources:
          requests:
            memory: "50M"
            cpu: "500m"
        volumeMounts:
        - mountPath: /usr/local/etc/php/conf.d/99-ddtrace.ini
          subPath: 99-ddtrace.ini
          name: ddtrace-php-ini
      restartPolicy: Always
      initContainers:
      - name: install-code
        image: datadog/docker-library:dd_trace_nginx_symfony_real_world_app
        imagePullPolicy: Always
        command: [ "cp", "-a", "-v", "/project/.", "/target-project/"]
        volumeMounts:
        - name: project-dir
          mountPath: "/target-project"
      volumes:
      - name: node-config-volume
        configMap:
          name: node-config
      - name: project-dir
        emptyDir: {}
      - name: nginx-config-volume
        configMap:
          name: nginx-config
      - name: ddtrace-php-ini
        configMap:
          defaultMode: 0644
          name: ddtrace-php-ini
          items:
          - key: configs-ddtrace.ini
            path: 99-ddtrace.ini
status: {}
